# Build stage for frontend
FROM node:20 AS frontend-builder

WORKDIR /app

# Copy frontend files
COPY frontend/package.json frontend/yarn.lock ./frontend/
COPY frontend/email-builder/package.json frontend/email-builder/yarn.lock ./frontend/email-builder/

# Copy static directory first to avoid post-install errors
COPY static ./static

# Install dependencies
RUN cd frontend/email-builder && yarn install
RUN cd frontend && yarn install

# Copy frontend source
COPY frontend ./frontend

# Build email-builder
RUN cd frontend/email-builder && yarn build

# Copy email-builder dist to frontend public
RUN mkdir -p frontend/public/static/email-builder && \
    cp -r frontend/email-builder/dist/* frontend/public/static/email-builder/

# Build frontend
RUN cd frontend && yarn build

# Build stage for backend
FROM golang:1.24 AS backend-builder

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY cmd ./cmd
COPY internal ./internal
COPY models ./models
COPY schema.sql queries.sql permissions.json ./

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -o listmonk -ldflags="-s -w" cmd/*.go

# Final stage
FROM alpine:latest

# Install dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 listmonk && \
    adduser -D -u 1000 -G listmonk listmonk

WORKDIR /listmonk

# Copy binary from builder
COPY --from=backend-builder /app/listmonk .
COPY --from=backend-builder /app/schema.sql /app/queries.sql /app/permissions.json ./

# Copy static files
COPY static ./static
COPY i18n ./i18n
COPY config.toml.sample ./config.toml.sample

# Copy frontend dist
COPY --from=frontend-builder /app/frontend/dist ./frontend/dist

# Create uploads directory
RUN mkdir -p uploads && chown -R listmonk:listmonk /listmonk

# Switch to non-root user
USER listmonk

# Expose port
EXPOSE 9000

# Run the application
CMD ["./listmonk"]

